name: CI
on:
  push:
    branches:
      - master
jobs:
  handle-skip-ci:
    name: Test Build Release
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - run: echo "Skipping CI because of this commit message = ${{ github.event.head_commit.message }}"
  test-build-release:
    name: Test Build Release
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '18'
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Run lint
      run:  npm run lint
    - name: Run test
      run:  npm run test -- --coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: unittests
    - name: Build release
      run: npm run build
    - name: Zip release
      run: npm run zip
    - name: Semantic release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create PR
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: peter-evans/create-pull-request@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'build: update version in package.json'
        title: 'build: update version in package.json'
        body: This is an auto-generated PR [skip ci].
        branch: package-json-updates
        branch-suffix: none
